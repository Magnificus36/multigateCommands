#!/usr/bin/perl -w
#$elza      = "/usr/local/bin/elza";
$elza      = "/usr/bin/elza";
$script    = "/home/multilink/multigate/commands/babelfish/babelfish.elz";

@languages = ( en_fr, en_de, en_it, en_pt, en_es, fr_en, de_en, it_en, pt_en, es_en, de_fr, fr_de, ru_en );

if (defined $ARGV[0]) {
   @args = split / /, $ARGV[0];
} else {
   @args = ();
}

sub safe_execute {
    my $file = shift @_;
    my @output;
    my $line;
    if ( my $pid = open( CHILD, "-|" ) ) {
        while ( $line = <CHILD> ) {
            if ( length($line) > 0 ) { push @output, $line }
        }
        close(CHILD);
    } else {
        die "cannot fork: $!" unless defined $pid;
        exec( $file , @_ ) or die "can't exec: $!";
    }
    return @output;
}

if ( @args < 1 ) { print "Syntax: babelfish [from_to] [text to translate]\n" }
else {

    $text = join " ", @args;
    ( $lang, $text ) = split /\s/, $text, 2;
    $goed = 0;
    foreach $taal (@languages) {
        if ( $taal eq $lang ) { $goed++ }
    }
    if ( $goed == 0 ) {
        print

          "This translation is not supported. Supported translations from_to
          are: en_fr en_de en_it en_pt en_es fr_en de_en it_en pt_en es_en
          de_fr fr_de ru_en \n";

    } else {

        ## Argumenten lijken OK, dus nu babelfish.elz aanroepen:
       #$text =~ tr/([a-zA-Z0-9\,\:\?\']/ /cs;
        $text =~ tr/\|\`\<\>\;/ /s;

        #$uitvoer = `$elza -s $script -l $lang -t "$text"`;
#        my @out = safe_execute( $elza, "-s $script", "-l$lang", "-t $text" );
        my @out = safe_execute( $elza, "$script", "-l$lang", "-t $text" );
        $uitvoer = join " ", @out;
        $uitvoer =~ s/===//g;
        $uitvoer =~ s/^\s+//g;
        $uitvoer =~ s/\n//g;
        if ( length($uitvoer) > 0 ) {
            print $uitvoer . "\n";
        } else {
            print "Sorry, translation did not succeed.";
        }
    }
}
